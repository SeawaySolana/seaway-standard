/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from "@metaplex-foundation/beet";
import * as web3 from "@solana/web3.js";

/**
 * @category Instructions
 * @category UpdateEstablishment
 * @category generated
 */
export type UpdateEstablishmentInstructionArgs = {
  uri: beet.COption<number[] /* size: 94 */>;
  requiresSignOff: beet.COption<boolean>;
  saleBasisPoints: beet.COption<number>;
  royaltiesShare: beet.COption<number>;
  isActive: beet.COption<boolean>;
};
/**
 * @category Instructions
 * @category UpdateEstablishment
 * @category generated
 */
export const updateEstablishmentStruct = new beet.FixableBeetArgsStruct<
  UpdateEstablishmentInstructionArgs & {
    instructionDiscriminator: number[] /* size: 8 */;
  }
>(
  [
    ["instructionDiscriminator", beet.uniformFixedSizeArray(beet.u8, 8)],
    ["uri", beet.coption(beet.uniformFixedSizeArray(beet.u8, 94))],
    ["requiresSignOff", beet.coption(beet.bool)],
    ["saleBasisPoints", beet.coption(beet.u16)],
    ["royaltiesShare", beet.coption(beet.u8)],
    ["isActive", beet.coption(beet.bool)],
  ],
  "UpdateEstablishmentInstructionArgs"
);
/**
 * Accounts required by the _updateEstablishment_ instruction
 *
 * @property [**signer**] authority
 * @property [_writable_] establishment
 * @category Instructions
 * @category UpdateEstablishment
 * @category generated
 */
export type UpdateEstablishmentInstructionAccounts = {
  authority: web3.PublicKey;
  establishment: web3.PublicKey;
  anchorRemainingAccounts?: web3.AccountMeta[];
};

export const updateEstablishmentInstructionDiscriminator = [
  167, 204, 240, 127, 62, 242, 110, 242,
];

/**
 * Creates a _UpdateEstablishment_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category UpdateEstablishment
 * @category generated
 */
export function createUpdateEstablishmentInstruction(
  accounts: UpdateEstablishmentInstructionAccounts,
  args: UpdateEstablishmentInstructionArgs,
  programId = new web3.PublicKey("seaWAy2d8LDYjj9QaettiB653hXjKz4YWrgYb8PUWfz")
) {
  const [data] = updateEstablishmentStruct.serialize({
    instructionDiscriminator: updateEstablishmentInstructionDiscriminator,
    ...args,
  });
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.authority,
      isWritable: false,
      isSigner: true,
    },
    {
      pubkey: accounts.establishment,
      isWritable: true,
      isSigner: false,
    },
  ];

  if (accounts.anchorRemainingAccounts != null) {
    for (const acc of accounts.anchorRemainingAccounts) {
      keys.push(acc);
    }
  }

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  });
  return ix;
}
